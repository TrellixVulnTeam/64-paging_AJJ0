import { ElementRef, EventEmitter, OnInit } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class CounterComponent implements OnInit {
    private hostElement;
    mode: string;
    from: number;
    to: number;
    of: number;
    animationTime: number;
    animationType: string;
    showCircle: boolean;
    circleColor: string;
    fontSize: number;
    delay: number;
    finishedText: string;
    finished: EventEmitter<{}>;
    private _hold;
    private _count;
    private _startTime;
    private _percentDone;
    private _holdProgress;
    private _nativeElement;
    private _startTimeout;
    private _finishedCounting;
    onWindowChange($event: any): void;
    constructor(hostElement: ElementRef);
    startTimeout: any;
    nativeElement: HTMLElement;
    holdProgress: number;
    percentDone: number;
    count: number;
    startTime: number;
    hold: boolean;
    finishedCounting: boolean;
    ngOnInit(): void;
    start(): void;
    stop(): void;
    restart(): void;
    init(): void;
    getCircleStyle(): any;
    getBarStyle(): any;
    getFillStyle(): any;
    private startAction();
    private step(timestamp);
    private requestFrame();
    private isElementInViewport();
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<CounterComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<CounterComponent, "app-counter", never, { "mode": "mode"; "from": "from"; "to": "to"; "animationTime": "animationTime"; "animationType": "animationType"; "showCircle": "showCircle"; "circleColor": "circleColor"; "fontSize": "fontSize"; "delay": "delay"; "finishedText": "finishedText"; "of": "of"; }, { "finished": "finished"; }, never, ["ng-counter-prefix", "ng-counter-suffix"]>;
}

//# sourceMappingURL=counter.component.d.ts.map