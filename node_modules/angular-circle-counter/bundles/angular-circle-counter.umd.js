(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('ease-component'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('angular-circle-counter', ['exports', '@angular/core', 'ease-component', '@angular/common'], factory) :
    (factory((global['angular-circle-counter'] = {}),global.ng.core,global.ease,global.ng.common));
}(this, (function (exports,core,ease,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var CounterComponent = (function () {
        function CounterComponent(hostElement) {
            this.hostElement = hostElement;
            this.mode = 'onInit';
            this.from = 0;
            this.to = 0;
            this.animationTime = 4000;
            this.animationType = 'linear';
            this.showCircle = true;
            this.circleColor = '#307bbb';
            this.fontSize = 150;
            this.delay = 0;
            this.finishedText = '';
            this.finished = new core.EventEmitter();
            this._hold = true;
            this._percentDone = 0;
            this._holdProgress = 0;
            this._finishedCounting = false;
            this.nativeElement = /** @type {?} */ (hostElement.nativeElement);
        }
        /**
         * @param {?} $event
         * @return {?}
         */
        CounterComponent.prototype.onWindowChange = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if (this.mode !== 'viewport') {
                    return;
                }
                if (this.hold && this.isElementInViewport()) {
                    this.start();
                }
            };
        Object.defineProperty(CounterComponent.prototype, "startTimeout", {
            get: /**
             * @return {?}
             */ function () {
                return this._startTimeout;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._startTimeout = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CounterComponent.prototype, "nativeElement", {
            get: /**
             * @return {?}
             */ function () {
                return this._nativeElement;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._nativeElement = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CounterComponent.prototype, "holdProgress", {
            get: /**
             * @return {?}
             */ function () {
                return this._holdProgress;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._holdProgress = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CounterComponent.prototype, "percentDone", {
            get: /**
             * @return {?}
             */ function () {
                return this._percentDone;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._percentDone = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CounterComponent.prototype, "count", {
            get: /**
             * @return {?}
             */ function () {
                return this._count;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._count = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CounterComponent.prototype, "startTime", {
            get: /**
             * @return {?}
             */ function () {
                return this._startTime;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._startTime = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CounterComponent.prototype, "hold", {
            get: /**
             * @return {?}
             */ function () {
                return this._hold;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._hold = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CounterComponent.prototype, "finishedCounting", {
            get: /**
             * @return {?}
             */ function () {
                return this._finishedCounting;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._finishedCounting = value;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        CounterComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                this.init();
            };
        /**
         * @return {?}
         */
        CounterComponent.prototype.start = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (this.delay > 0) {
                    this.startTimeout = window.setTimeout(function () {
                        _this.startAction();
                    }, this.delay);
                    return;
                }
                this.startAction();
            };
        /**
         * @return {?}
         */
        CounterComponent.prototype.stop = /**
         * @return {?}
         */
            function () {
                window.clearTimeout(this.startTimeout);
                this.hold = true;
            };
        /**
         * @return {?}
         */
        CounterComponent.prototype.restart = /**
         * @return {?}
         */
            function () {
                this.init();
            };
        /**
         * @return {?}
         */
        CounterComponent.prototype.init = /**
         * @return {?}
         */
            function () {
                this.hold = true;
                this.count = this.from;
                this.holdProgress = 0;
                this.startTime = undefined;
                this.percentDone = 0;
                this.finishedCounting = false;
                window.clearTimeout(this.startTimeout);
                if (typeof this.of === 'undefined') {
                    this.of = this.to;
                }
                if (this.mode === 'onInit') {
                    this.start();
                }
            };
        /**
         * @return {?}
         */
        CounterComponent.prototype.getCircleStyle = /**
         * @return {?}
         */
            function () {
                return {
                    'clip': this.percentDone >= 0.5 ? 'rect(auto, auto, auto, auto)' : 'rect(0em, 1em, 1em, 0.5em)'
                };
            };
        /**
         * @return {?}
         */
        CounterComponent.prototype.getBarStyle = /**
         * @return {?}
         */
            function () {
                var /** @type {?} */ rotateDeg = 360 * this.percentDone;
                return {
                    'transform': "rotate(" + rotateDeg + "deg)",
                    'border-color': this.circleColor
                };
            };
        /**
         * @return {?}
         */
        CounterComponent.prototype.getFillStyle = /**
         * @return {?}
         */
            function () {
                var /** @type {?} */ rotateDeg = this.percentDone > 0.5 ? 180 : 0;
                return {
                    'display': this.percentDone <= 0.5 ? 'none' : 'block',
                    'transform': "rotate(" + rotateDeg + "deg)",
                    'border-color': this.circleColor
                };
            };
        /**
         * @return {?}
         */
        CounterComponent.prototype.startAction = /**
         * @return {?}
         */
            function () {
                this.hold = false;
                this.requestFrame();
            };
        /**
         * @param {?} timestamp
         * @return {?}
         */
        CounterComponent.prototype.step = /**
         * @param {?} timestamp
         * @return {?}
         */
            function (timestamp) {
                if (!this.startTime) {
                    this.startTime = timestamp;
                }
                var /** @type {?} */ progress = timestamp - this.startTime;
                progress += this.holdProgress;
                if (this.hold) {
                    this.holdProgress = progress;
                    this.startTime = undefined;
                    return;
                }
                var /** @type {?} */ easeValue = ease[this.animationType](progress / this.animationTime);
                var /** @type {?} */ currentCount = Math.round(easeValue * this.to);
                if (currentCount >= this.to) {
                    currentCount = this.to;
                }
                this.count = currentCount;
                this.percentDone = currentCount / this.of;
                if (progress < this.animationTime) {
                    this.requestFrame();
                    return;
                }
                // Finished
                this.finishedCounting = true;
                this.finished.emit();
            };
        /**
         * @return {?}
         */
        CounterComponent.prototype.requestFrame = /**
         * @return {?}
         */
            function () {
                window.requestAnimationFrame(this.step.bind(this));
            };
        /**
         * @return {?}
         */
        CounterComponent.prototype.isElementInViewport = /**
         * @return {?}
         */
            function () {
                var /** @type {?} */ rect = this.nativeElement.getBoundingClientRect();
                return (rect.top >= 0 &&
                    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight));
            };
        CounterComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'app-counter',
                        template: "<div class=\"ng-counter\" [style.font-size]=\"fontSize + 'px'\" [ngClass]=\"{'ng-counter--with-circle' : showCircle}\">\n    <div class=\"ng-counter__text\">\n        <ng-template [ngIf]=\"!finishedCounting || !finishedText.length\">\n            <span class=\"ng-counter__prefix\">\n                <ng-content select=\"ng-counter-prefix\"></ng-content>\n            </span>\n            <span class=\"ng-counter__number\">{{count}}</span>\n            <span class=\"ng-counter__suffix\">\n                <ng-content select=\"ng-counter-suffix\"></ng-content>\n            </span>\n        </ng-template>\n        <ng-template [ngIf]=\"finishedCounting && finishedText.length\">\n            <span class=\"ng-counter__finish_text\">{{finishedText}}</span>\n        </ng-template>\n    </div>\n    <div class=\"ng-counter__circle\" *ngIf=\"showCircle\" [ngStyle]=\"getCircleStyle()\">\n        <div class=\"ng-counter__circle__bar\" [ngStyle]=\"getBarStyle()\"></div>\n        <div class=\"ng-counter__circle__fill\" [ngStyle]=\"getFillStyle()\"></div>\n    </div>\n</div>",
                        styles: [".ng-counter{display:inline-block;position:relative;font-size:150px}.ng-counter.ng-counter--with-circle{width:1em;height:1em;box-sizing:content-box}.ng-counter.ng-counter--with-circle .ng-counter__text{align-items:center;justify-content:center;height:1em}.ng-counter__text{display:flex}.ng-counter__finish_text,.ng-counter__number,.ng-counter__prefix,.ng-counter__suffix{font-size:.3em}.ng-counter__circle{position:absolute;top:0;left:0;width:1em;height:1em;box-sizing:content-box}.ng-counter__circle__bar,.ng-counter__circle__fill{position:absolute;border:.08em solid;width:.84em;height:.84em;clip:rect(0,.5em,1em,0);border-radius:50%;box-sizing:content-box}"],
                    },] },
        ];
        /** @nocollapse */
        CounterComponent.ctorParameters = function () {
            return [
                { type: core.ElementRef, },
            ];
        };
        CounterComponent.propDecorators = {
            "mode": [{ type: core.Input },],
            "from": [{ type: core.Input },],
            "to": [{ type: core.Input },],
            "of": [{ type: core.Input },],
            "animationTime": [{ type: core.Input },],
            "animationType": [{ type: core.Input },],
            "showCircle": [{ type: core.Input },],
            "circleColor": [{ type: core.Input },],
            "fontSize": [{ type: core.Input },],
            "delay": [{ type: core.Input },],
            "finishedText": [{ type: core.Input },],
            "finished": [{ type: core.Output },],
            "onWindowChange": [{ type: core.HostListener, args: ['window:scroll', ['$event'],] }, { type: core.HostListener, args: ['window:resize', ['$event'],] },],
        };
        return CounterComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var CounterModule = (function () {
        function CounterModule() {
        }
        CounterModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            CounterComponent
                        ],
                        imports: [
                            common.CommonModule
                        ],
                        schemas: [core.CUSTOM_ELEMENTS_SCHEMA],
                        exports: [
                            CounterComponent
                        ]
                    },] },
        ];
        return CounterModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.CounterModule = CounterModule;
    exports.ɵa = CounterComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,